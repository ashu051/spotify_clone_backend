# Generated by Django 4.2.3 on 2023-07-19 18:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.TextField()),
                ('phone_number', models.TextField(unique=True)),
                ('user_profile_image', models.ImageField(upload_to='profile')),
                ('country', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('artist_name', models.TextField()),
                ('artist_bio', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('playlist_name', models.TextField()),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('song_name', models.TextField(max_length=70)),
                ('song_duration', models.FloatField()),
                ('artist_songs', models.ManyToManyField(to='api.artist')),
                ('playlist_song', models.ManyToManyField(to='api.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='User_Liked_Songs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('song_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.song')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Premium',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('premium_type', models.TextField(choices=[('basic', 'Basic'), ('standard', 'Standard'), ('elite', 'Elite')], default='basic')),
                ('premium_active', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Podcast',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('podcast_name', models.TextField()),
                ('podcast_duration', models.FloatField()),
                ('artist_podcast', models.ManyToManyField(to='api.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('album_name', models.TextField()),
                ('artist_album', models.ManyToManyField(to='api.artist')),
            ],
        ),
    ]
